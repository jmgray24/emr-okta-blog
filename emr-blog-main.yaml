AWSTemplateFormatVersion: 2010-09-09
Description: "blah blah"

#Metadata:

Parameters:

  #Networking
  VpcCIDR:
    Description: Please enter the IP range (CIDR notation) for this VPC
    Type: String
    Default: 10.192.0.0/16

  PublicSubnet1CIDR:
    Description: Please enter the IP range (CIDR notation) for the public subnet in the first Availability Zone
    Type: String
    Default: 10.192.10.0/24

  PublicSubnet2CIDR:
    Description: Please enter the IP range (CIDR notation) for the public subnet in the second Availability Zone
    Type: String
    Default: 10.192.11.0/24

  PrivateSubnet1CIDR:
    Description: Please enter the IP range (CIDR notation) for the private subnet in the first Availability Zone
    Type: String
    Default: 10.192.20.0/24

  PrivateSubnet2CIDR:
    Description: Please enter the IP range (CIDR notation) for the private subnet in the second Availability Zone
    Type: String
    Default: 10.192.21.0/24

  #Analytics
  EC2KeyPair:
    Description: 'Amazon EC2 Key Pair (Optional, for debugging)'
    ConstraintDescription: Must be the name of an existing EC2 KeyPair.
    Type: 'AWS::EC2::KeyPair::KeyName'
  SAMLProviderName:
    Type: String
    Default: oktaSAMLProvider
    AllowedValues:
      - oktaSAMLProvider
    Description: SAML Provider Name Created in AWS
  userBucketName: #***
    Type: String
    Description: >-
      Name of an existing S3 bucket (e.g s3://lf-metadata-bucket-account-id)
      with no trailing /
    AllowedPattern: 's3://.*[^/]'
  myIPCidr: #***
    Type: String
    Description: >-
      Enter the IP Address from where you wish to launch the blogpost (e.g
      10.12.13.14/32)
    AllowedPattern: '(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})'
  KdcAdminPassword: #**** HIDE
    Type: String
    NoEcho: 'true'
    AllowedPattern: >-
      (?=^.{6,255}$)((?=.*\d)(?=.*[A-Z])(?=.*[a-z])|(?=.*\d)(?=.*[^A-Za-z0-9])(?=.*[a-z])|(?=.*[^A-Za-z0-9])(?=.*[A-Z])(?=.*[a-z])|(?=.*\d)(?=.*[A-Z])(?=.*[^A-Za-z0-9]))^.*
    Description: >-
      Must be at least 8 characters containing letters, numbers and symbols -
      Eg: Password@123
    Default: Password@123
  Realm: #**** HIDE
    Type: String
    Default: EC2.INTERNAL
    Description: Kerberos Realm for Internal KDC
  ReleaseLabel: #**** SHOW BUT CHANGE DEFAULT
    Type: String
    Default: emr-5.30.1
    AllowedValues:
      - emr-5.30.1
    Description: EMR Version
  VPCSubnet: #*** GET FROM NET STACK
    Type: 'AWS::EC2::Subnet::Id'
    Description: Subnet to be used for Amazon EMR cluster.
  OktaAppMetadataURL:
    Type: String
    Description: URL for Okta metadata XML file.
  oktaUser1:
    Type: String
    Description: Username for user 1
    Default: analyst1
  oktaUser2: #**** DASH WEH
    Type: String
    Description: Username for user 2
    Default: analyst2
  InstanceType:
    Type: String
    Default: m5.xlarge
    Description: EMR Cluster Instance Types for both Master and Core
    AllowedValues:
      - m5.xlarge
      - m4.xlarge
      - i3.xlarge
      - i3.2xlarge
      - r4.xlarge

Resources:
  NetworkingStack:
    Type: 'AWS::CloudFormation::Stack'
    Properties:
      TemplateURL: #TODO
      Parameters:
        VpcCIDR: !Ref VpcCIDR
        PublicSubnet1CIDR: !Ref PublicSubnet1CIDR
        PublicSubnet12CIDR: !Ref PublicSubnet2CIDR
        PrivateSubnet1CIDR: !Ref PrivateSubnet1CIDR
        PrivateSubnet2CIDR: !Ref PrivateSubnet2CIDR

  EMRStack:
    Type: 'AWS::CloudFormation::Stack'
    Properties:
      TemplateURL: #TODO
      Parameters:
        EC2KeyPair: !Ref EC2KeyPair
        SAMLProviderName: !Ref SAMLProviderName
        myIPCidr: !Ref myIPCidr
        oktaUser: !Ref oktaUser
        OktaAppMetadataURL: !Ref OktaAppMetadataURL
        ReleaseLabel: !Ref ReleaseLabel
        InstanceType: !Ref InstanceType
        userBucketName: !Ref userBucketName

  LoadBalancingStack:
    Type: 'AWS::CloudFormation::Stack'
    Properties:
      TemplateURL: #TODO
      Parameters:
        PublicSubnet1: !GetAtt 
          - NetworkingStack
          - Outputs.PublicSubnet1
        PublicSubnet2: !GetAtt 
          - NetworkingStack
          - Outputs.PublicSubnet2
        VPC: !GetAtt 
          - NetworkingStack
          - Outputs.VPC
        MasterNodeIp: !GetAtt 
          - EMRStack
          - Outputs.MasterNodeIp
