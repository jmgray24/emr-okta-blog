AWSTemplateFormatVersion: 2010-09-09
Description: "Cloudformation template to create AWS Lakeformation resources, Amazon EMR cluster and required networking infrastructure."

Metadata:
  'AWS::CloudFormation::Interface':
    ParameterGroups:
      - Label:
          default: Network Configuration
        Parameters:
          - HostedZoneId
          - DomainName
      - Label:
          default: Lake Formation Configuration
        Parameters:
          - LFSAMLUserName
          - OktaAppMetadataURL
      - Label:
          default: EMR Configuration
        Parameters:
          - ReleaseLabel
          - InstanceType
          - KdcAdminPassword

    ParameterLabels:
      HostedZoneId:
        default: HostedZoneId
      DomainName:
        default: DomainName
      LFSAMLUserName:
        default: LFSAMLUserName
      OktaAppMetadataURL: 
        default: OktaAppMetadataURL
      ReleaseLabel:
        default: Releaselabel
      InstanceType:
        default: InstanceType
      KdcAdminPassword: 
        default: KdcAdminPassword

Parameters:
  #Networking
  HostedZoneId:
    Description: Select a hosted zone for your domain name
    Type: AWS::Route53::HostedZone::Id
  DomainName:
    Description: >-
      Enter a domain name that will be used to access Zeppelin (e.g. example.com).
      This may be the domain name of the hosted zone selected above (if not in use) or a subdomain of the hosted zone (e.g. zeppelin.example.com)
    Type: String
  
  #LF
  LFSAMLUserName:
    Description: Enter the displayName of the SAML user you created and assigned to your app in Okta
    Type: String
    Default: analyst
  OktaAppMetadataURL:
    Description: Enter the URL of the Okta metadata XML file
    Type: String

  #EMR
  ReleaseLabel:
    Type: String
    Default: emr-5.33.1
    AllowedValues:
      - emr-5.34.0
      - emr-5.33.1
      - emr-5.33.0
      - emr-5.32.0
      - emr-5.31.0
    Description: EMR Version
  InstanceType:
    Type: String
    Default: m5.xlarge
    Description: EMR Cluster instance types for both master and core instances
    AllowedValues:
      - m5.xlarge
      - m4.xlarge
      - i3.xlarge
      - i3.2xlarge
      - r4.xlarge
  KdcAdminPassword:
    Type: String
    NoEcho: 'true'
    AllowedPattern: >-
      (?=^.{6,255}$)((?=.*\d)(?=.*[A-Z])(?=.*[a-z])|(?=.*\d)(?=.*[^A-Za-z0-9])(?=.*[a-z])|(?=.*[^A-Za-z0-9])(?=.*[A-Z])(?=.*[a-z])|(?=.*\d)(?=.*[A-Z])(?=.*[^A-Za-z0-9]))^.*
    Description: >-
      Must be at least 8 characters containing letters, numbers and symbols -
      Eg: Password@123
    Default: Password@123

Resources:
  NetworkingStack:
    Type: 'AWS::CloudFormation::Stack'
    Properties:
      TemplateURL: 'https://emr-okta-blog.s3.amazonaws.com/templates/networking.yaml'

  LakeFormationStack:
    Type: 'AWS::CloudFormation::Stack'
    Properties:
      TemplateURL: 'https://emr-okta-blog.s3.amazonaws.com/templates/lakeformation.yaml'
      Parameters:
        LFDatabaseName: 'emrlfsamldb'
        LFTableName: 'citydata'
        LFSAMLUserName: !Ref LFSAMLUserName
        SAMLProviderName: !Join ['-', ['OktaSAMLProvider', !Select [4, !Split ['-', !Select [2, !Split ['/', !Ref AWS::StackId]]]]]]
        OktaAppMetadataURL: !Ref OktaAppMetadataURL

  EMRStack:
    Type: 'AWS::CloudFormation::Stack'
    Properties:
      TemplateURL: 'https://emr-okta-blog.s3.amazonaws.com/templates/emr.yaml'
      Parameters:
        DataBucketName: !GetAtt 
          - LakeFormationStack
          - Outputs.DataBucketName
        DataBucketArn: !GetAtt 
          - LakeFormationStack
          - Outputs.DataBucketArn
        KdcAdminPassword: !Ref KdcAdminPassword
        ReleaseLabel: !Ref ReleaseLabel
        VpcId: !GetAtt 
          - NetworkingStack
          - Outputs.VpcId
        VpcSubnet: !GetAtt 
          - NetworkingStack
          - Outputs.PrivateSubnet1
        InstanceType: !Ref InstanceType
        HostedZoneId: !Ref HostedZoneId
        DomainName: !Ref DomainName
        PublicSubnet1Id: !GetAtt 
          - NetworkingStack
          - Outputs.PublicSubnet1
        PublicSubnet2Id: !GetAtt 
          - NetworkingStack
          - Outputs.PublicSubnet2
        SAMLProviderArn: !GetAtt
          - LakeFormationStack
          - Outputs.SAMLProviderArn
Outputs:
  OktaSingleSignOnUrl:
    Description: The value for Single sign on URL, to be updated in Okta
    Value: !GetAtt 
      - EMRStack
      - Outputs.OktaSingleSignOnUrl
  OktaRoleAttribute:
    Description: The value for the attribute statement https://aws.amazon.com/SAML/Attributes/Role, to be updated in Okta
    Value: !GetAtt 
      - EMRStack
      - Outputs.OktaRoleAttribute
  ZeppelinUrl:
    Description: Zeppelin URL
    Value: !GetAtt 
      - EMRStack
      - Outputs.ZeppelinUrl
  MasterNodeInstanceId:
    Description: EC2 instance ID of EMR master node
    Value: !GetAtt 
      - EMRStack
      - Outputs.MasterNodeInstanceId
  LFTableName:
    Description: Lake Formation table name
    Value: citydata
  Pac4jCallbackUrl:
    Description: Lake Formation table name
    Value: !Sub 'https://${DomainName}/gateway/knoxsso/api/v1/websso'
  KnoxProviderUrl:
    Description: Lake Formation table name
    Value: !Sub 'https://${DomainName}/'
  KnoxRedirectWhitelistRegex:
    Description: Lake Formation table name
    Value: !Sub '^https?:\/\/(${DomainName}).*$'
  